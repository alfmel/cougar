<?php

namespace Cougar\UnitTests\Model;

use Cougar\Model\iArrayExportable;
use Cougar\Model\tAarrayExportable;
use Cougar\Model\ArrayExportable;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-08-05 at 07:50:44.
 */
class ArrayExportableTest extends \PHPUnit_Framework_TestCase {

    public static function setUpBeforeClass()
    {
        require_once(__DIR__ . "/../../cougar.php");
    }

    /**
     * @covers \Cougar\Model\ArrayExportable::__get
     */
    public function testToArray() {
        $object = new ArrayExportableUnitTest();
        $array = $object->__toArray();
        $this->assertCount(2, $array);
        $this->assertArrayHasKey("propertyA", $array);
        $this->assertArrayHasKey("propertyB", $array);
        $this->assertEquals("Value A", $array["propertyA"]);
        $this->assertEquals("Value B", $array["propertyB"]);
    }

    /**
     * @covers \Cougar\Model\ArrayExportable::__get
     */
    public function testTraitToArray() {
        $object = new ArrayExportableUnitTestViaTrait();
        $array = $object->__toArray();
        $this->assertCount(2, $array);
        $this->assertArrayHasKey("propertyA", $array);
        $this->assertArrayHasKey("propertyB", $array);
        $this->assertEquals("Value A", $array["propertyA"]);
        $this->assertEquals("Value B", $array["propertyB"]);
    }
}


/* Implementations of class and struct to be tested */

require_once(__DIR__ . "/../../Cougar/Model/iArrayExportable.php");
require_once(__DIR__ . "/../../Cougar/Model/tArrayExportable.php");
require_once(__DIR__ . "/../../Cougar/Model/ArrayExportable.php");

class ArrayExportableUnitTestViaTrait implements iArrayExportable
{
    use \Cougar\Model\tArrayExportable;
    
    public $propertyA = "Value A";
    public $propertyB = "Value B";
    protected $property1 = "Protected Value 1";
    protected $property2 = "Protected Value 2";
}

class ArrayExportableUnitTest extends ArrayExportable
{
    public $propertyA = "Value A";
    public $propertyB = "Value B";
    protected $property1 = "Protected Value 1";
    protected $property2 = "Protected Value 2";
}
?>
